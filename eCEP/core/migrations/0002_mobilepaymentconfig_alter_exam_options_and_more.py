# Generated by Django 5.0.1 on 2025-02-18 22:08

import core.storage
import datetime
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='MobilePaymentConfig',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('provider', models.CharField(choices=[('orange', 'Orange Money'), ('mtn', 'MTN Mobile Money')], max_length=20, unique=True)),
                ('merchant_id', models.CharField(max_length=100)),
                ('api_key', models.CharField(max_length=100)),
                ('api_secret', models.CharField(max_length=100)),
                ('api_url', models.URLField()),
                ('callback_url', models.URLField()),
                ('is_active', models.BooleanField(default=True)),
                ('test_mode', models.BooleanField(default=False)),
            ],
        ),
        migrations.AlterModelOptions(
            name='exam',
            options={'ordering': ['-date']},
        ),
        migrations.AddField(
            model_name='exam',
            name='allowed_attempts',
            field=models.IntegerField(default=1),
        ),
        migrations.AddField(
            model_name='exam',
            name='duration',
            field=models.DurationField(default=datetime.timedelta(seconds=7200)),
        ),
        migrations.AddField(
            model_name='exam',
            name='instructions',
            field=models.TextField(blank=True),
        ),
        migrations.AddField(
            model_name='exam',
            name='is_practice',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='exam',
            name='passing_score',
            field=models.FloatField(default=60.0),
        ),
        migrations.AddField(
            model_name='exam',
            name='type',
            field=models.CharField(choices=[('practice', 'Examen Blanc'), ('final', 'Examen Final'), ('quiz', 'Quiz')], default='practice', max_length=20),
        ),
        migrations.AddField(
            model_name='resource',
            name='download_count',
            field=models.IntegerField(default=0),
        ),
        migrations.AddField(
            model_name='resource',
            name='file',
            field=models.FileField(blank=True, null=True, storage=core.storage.SecureFileStorage(), upload_to='resources/%Y/%m/%d/'),
        ),
        migrations.AddField(
            model_name='resource',
            name='file_size',
            field=models.IntegerField(default=0),
        ),
        migrations.AddField(
            model_name='resource',
            name='last_downloaded',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='student',
            name='last_activity_date',
            field=models.DateField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='student',
            name='streak_days',
            field=models.IntegerField(default=0),
        ),
        migrations.AddField(
            model_name='student',
            name='total_exercises_completed',
            field=models.IntegerField(default=0),
        ),
        migrations.AlterField(
            model_name='student',
            name='level',
            field=models.IntegerField(default=1),
        ),
        migrations.CreateModel(
            name='License',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('basic', 'Basique'), ('premium', 'Premium'), ('school', 'École')], max_length=20)),
                ('start_date', models.DateTimeField(auto_now_add=True)),
                ('end_date', models.DateTimeField()),
                ('status', models.CharField(choices=[('active', 'Active'), ('expired', 'Expirée'), ('cancelled', 'Annulée'), ('pending', 'En attente')], default='pending', max_length=20)),
                ('max_students', models.IntegerField(default=1)),
                ('features', models.JSONField(default=dict)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='licenses', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-start_date'],
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('currency', models.CharField(default='XAF', max_length=3)),
                ('payment_type', models.CharField(choices=[('mobile', 'Paiement Mobile'), ('card', 'Carte Bancaire'), ('transfer', 'Virement Bancaire')], max_length=20)),
                ('status', models.CharField(choices=[('pending', 'En attente'), ('completed', 'Complété'), ('failed', 'Échoué'), ('refunded', 'Remboursé')], default='pending', max_length=20)),
                ('transaction_id', models.CharField(max_length=100, unique=True)),
                ('payment_date', models.DateTimeField(auto_now_add=True)),
                ('license', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payments', to='core.license')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payments', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-payment_date'],
            },
        ),
        migrations.CreateModel(
            name='MobilePayment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('provider', models.CharField(choices=[('orange', 'Orange Money'), ('mtn', 'MTN Mobile Money')], max_length=20)),
                ('phone_number', models.CharField(max_length=20)),
                ('reference', models.CharField(max_length=100, unique=True)),
                ('status', models.CharField(choices=[('initiated', 'Initié'), ('pending', 'En attente'), ('completed', 'Complété'), ('failed', 'Échoué'), ('cancelled', 'Annulé')], default='initiated', max_length=20)),
                ('callback_url', models.URLField()),
                ('callback_data', models.JSONField(default=dict)),
                ('initiated_at', models.DateTimeField(auto_now_add=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('payment', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='mobile_payment', to='core.payment')),
            ],
            options={
                'ordering': ['-initiated_at'],
            },
        ),
        migrations.CreateModel(
            name='Subscription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('interval', models.CharField(choices=[('monthly', 'Mensuel'), ('quarterly', 'Trimestriel'), ('yearly', 'Annuel')], max_length=20)),
                ('auto_renew', models.BooleanField(default=True)),
                ('next_billing_date', models.DateTimeField()),
                ('license', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subscription', to='core.license')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subscriptions', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
